{
  "info": {
    "name": "EcommerceBackendAPI",
    "_postman_id": "7a3b2f8c-9d4e-4c1a-b7f2-3a5e6d7c8e9f",
    "description": "Postman collection for testing the E-Commerce Backend API (Node.js, Express, Sequelize, PostgreSQL).",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Server Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/",
          "host": ["{{baseUrl}}"],
          "path": [""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Server Health - Status 200', function () {",
              "    pm.response.to.have.status(200);",
              "    pm.expect(pm.response.text()).to.equal('E-Commerce Backend is running!');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"first_name\": \"John\", \"last_name\": \"Doe\", \"phone_number\": \"1234567890\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create User - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json()).to.have.property('id');",
                  "    pm.expect(pm.response.json().first_name).to.equal('John');",
                  "});",
                  "pm.environment.set('userId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get All Users - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get User by ID - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.have.property('id', parseInt(pm.environment.get('userId')));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"first_name\": \"Jane\", \"last_name\": \"Doe\", \"phone_number\": \"0987654321\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update User - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().first_name).to.equal('Jane');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Delete User - Status 204', function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create User for Workflow",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"first_name\": \"Alice\", \"last_name\": \"Smith\", \"phone_number\": \"5555555555\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create User for Workflow - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.environment.set('userId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Electronics\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create Category - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().name).to.equal('Electronics');",
                  "});",
                  "pm.environment.set('categoryId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": ["{{baseUrl}}"],
              "path": ["categories"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get All Categories - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["categories", "{{categoryId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get Category by ID - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Smartphone\", \"description\": \"Latest model\", \"price\": 699, \"category_id\": {{categoryId}}, \"quantity\": 50}"
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create Product - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().name).to.equal('Smartphone');",
                  "});",
                  "pm.environment.set('productId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get All Products - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get Product by ID - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Product Images",
      "item": [
        {
          "name": "Create Product Image",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"image\": \"http://example.com/smartphone.jpg\", \"product_id\": {{productId}}}"
            },
            "url": {
              "raw": "{{baseUrl}}/productImages",
              "host": ["{{baseUrl}}"],
              "path": ["productImages"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create Product Image - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.environment.set('productImageId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Product Images",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/productImages?product_id={{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["productImages"],
              "query": [
                {
                  "key": "product_id",
                  "value": "{{productId}}"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get All Product Images - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Carts",
      "item": [
        {
          "name": "Add to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"user_id\": {{userId}}, \"product_id\": {{productId}}, \"quantity\": 2}"
            },
            "url": {
              "raw": "{{baseUrl}}/carts",
              "host": ["{{baseUrl}}"],
              "path": ["carts"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Add to Cart - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.environment.set('cartId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get User Cart",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/carts/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["carts", "user", "{{userId}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get User Cart - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"user_id\": {{userId}}, \"items\": [{\"product_id\": {{productId}}, \"quantity\": 2}]}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create Order - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json()).to.have.property('id');",
                  "});",
                  "pm.environment.set('orderId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get All Orders - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json()).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Order Items",
      "item": [
        {
          "name": "Create Order Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"order_id\": {{orderId}}, \"product_id\": {{productId}}, \"quantity\": 2}"
            },
            "url": {
              "raw": "{{baseUrl}}/orderItems",
              "host": ["{{baseUrl}}"],
              "path": ["orderItems"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create Order Item - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.environment.set('orderItemId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Order Items",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orderItems?order_id={{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["orderItems"],
              "query": [
                {
                  "key": "order_id",
                  "value": "{{orderId}}"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get All Order Items - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Addresses",
      "item": [
        {
          "name": "Create Address",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"123 Main St\", \"user_id\": {{userId}}}"
            },
            "url": {
              "raw": "{{baseUrl}}/addresses",
              "host": ["{{baseUrl}}"],
              "path": ["addresses"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create Address - Status 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.environment.set('addressId', pm.response.json().id);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get All Addresses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/addresses?user_id={{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["addresses"],
              "query": [
                {
                  "key": "user_id",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get All Addresses - Status 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Error Cases",
      "item": [
        {
          "name": "Create User - Missing Fields",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Create User Missing Fields - Status 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "    pm.expect(pm.response.json().error).to.equal('All fields are required');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get User - Invalid ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/999",
              "host": ["{{baseUrl}}"],
              "path": ["users", "999"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get User Invalid ID - Status 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "    pm.expect(pm.response.json().error).to.equal('User not found');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ]
}